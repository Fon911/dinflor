import React, { useState } from "react";
import { ScrollView, Text, TouchableOpacity, View } from "react-native";
import Chatprev from "../ui/chatprev";

const Chat = () => {
  const chats = [
    {
      sender: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏",
      time: "10:32",
      avatar: require("@/assets/test/chat.png"),
      message: "–£ –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ú–∞–º–∞ –°–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ, –∑–∞—Ö–æ–¥–∏—Ç–µ...",
    },
    {
      sender: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Luna",
      time: "09:15",
      avatar: require("@/assets/test/chat2.png"),
      message: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ...",
    },
    {
      sender: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏",
      time: "–í—á–µ—Ä–∞",
      avatar: require("@/assets/test/chat.png"),
      message: "–£ –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ú–∞–º–∞ –°–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ, –∑–∞—Ö–æ–¥–∏—Ç–µ...",
    },
    {
      sender: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Luna",
      time: "08:50",
      avatar: require("@/assets/test/chat2.png"),
      message: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ...",
    },
    {
      sender: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏",
      time: "09:00",
      avatar: require("@/assets/test/chat.png"),
      message: "–£ –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ú–∞–º–∞ –°–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ, –∑–∞—Ö–æ–¥–∏—Ç–µ...",
    },
    {
      sender: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Luna",
      time: "11:12",
      avatar: require("@/assets/test/chat2.png"),
      message: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ...",
    },
    {
      sender: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏",
      time: "13:05",
      avatar: require("@/assets/test/chat.png"),
      message: "–£ –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ú–∞–º–∞ –°–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ, –∑–∞—Ö–æ–¥–∏—Ç–µ...",
    },
    {
      sender: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Luna",
      time: "15:42",
      avatar: require("@/assets/test/chat2.png"),
      message: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ...",
    },

    // üóÇ –ê—Ä—Ö–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:
    {
      sender: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏",
      time: "13:05",
      avatar: require("@/assets/test/chat.png"),
      message: "–£ –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ú–∞–º–∞ –°–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ, –∑–∞—Ö–æ–¥–∏—Ç–µ...",
      archived: true,
    },
    {
      sender: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Luna",
      time: "15:42",
      avatar: require("@/assets/test/chat2.png"),
      message: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ...",
      archived: true,
    },
    {
      sender: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Luna",
      time: "15:42",
      avatar: require("@/assets/test/chat2.png"),
      message: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ...",
    },
    {
      sender: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏",
      time: "13:05",
      avatar: require("@/assets/test/chat.png"),
      message: "–£ –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ú–∞–º–∞ –°–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ, –∑–∞—Ö–æ–¥–∏—Ç–µ...",
      archived: true,
    },
  ];

  const [activeTab, setActiveTab] = useState<"current" | "completed">(
    "current"
  );

  const filteredChats =
    activeTab === "current"
      ? chats.filter((_, i) => i < 8)
      : chats.filter((c) => c.archived);

  return (
    <View className="flex-1 bg-white mx-[15px] mt-[56px] relative">
      <Text className="text-[16px] font-interBold text-main-200">–í—Ö–æ–¥—è—â–∏–µ</Text>

      <View className="relative mt-[10px]">
        <View className="flex flex-row items-center border-[#E5E5E5]">
          <TouchableOpacity
            onPress={() => setActiveTab("current")}
            activeOpacity={1}
            className={`border-b-[1px] relative z-50 ${
              activeTab === "current" ? "border-main-100" : "border-transparent"
            }`}
          >
            <Text className="font-interRegular text-[10px] text-main-200">
              –°–æ–æ–±—â–µ–Ω–∏—è
            </Text>
          </TouchableOpacity>

          <TouchableOpacity
            onPress={() => setActiveTab("completed")}
            activeOpacity={1}
            className={`border-b-[1px] ml-[23px] relative z-50 ${
              activeTab === "completed"
                ? "border-main-100"
                : "border-transparent"
            }`}
          >
            <Text className="font-interRegular text-[10px] text-main-200">
              –ê—Ä—Ö–∏–≤
            </Text>
          </TouchableOpacity>
        </View>

        <View className="w-full h-[1px] bg-[#E5E5E5] absolute bottom-[0px] z-0" />
      </View>

      <ScrollView className="mt-[20px]" showsVerticalScrollIndicator={false}>
        {filteredChats.map((chat, index) => (
          <View key={index} className="mb-[15px]">
            <Chatprev
              time={chat.time}
              sender={chat.sender}
              avatar={chat.avatar}
              message={chat.message}
            />
          </View>
        ))}
      </ScrollView>
    </View>
  );
};

export default Chat;
